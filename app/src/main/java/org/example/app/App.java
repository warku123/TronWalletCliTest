/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example.app;

import org.tron.trident.core.ApiWrapper;

public class App {
    public static void main(String[] args) {
        System.out.println("TRON Trident SDK Demo");
        System.out.println("===================");
        
        // 演示不同的连接方式
        demonstrateConnections();
    }
    
    private static void demonstrateConnections() {
        System.out.println("\n可用的连接选项：");
        System.out.println("1. 本地节点");
        System.out.println("2. Nile 测试网");
        System.out.println("3. Shasta 测试网");
        System.out.println("4. 主网");
        
        System.out.println("\n=== 本地节点连接示例 ===");
        try {
            // 连接到本地节点（使用空私钥进行只读操作）
            ApiWrapper localClient = TronNodeConnector.connectToLocalNode("");
            TronNodeConnector.testConnection(localClient);
            
            System.out.println("本地节点配置:");
            System.out.println("- 确保 TRON 节点运行在 127.0.0.1:50051");
            System.out.println("- Solidity 节点运行在 127.0.0.1:50061");
            
        } catch (Exception e) {
            System.err.println("本地节点连接失败: " + e.getMessage());
        }
        
        System.out.println("\n=== 测试网连接示例 ===");
        try {
            // 连接到 Nile 测试网（用于测试，无需真实私钥）
            System.out.println("如要连接 Nile 测试网，请取消注释以下代码：");
            System.out.println("// ApiWrapper nileClient = TronNodeConnector.connectToNileTestnet(\"your-private-key\");");
            
        } catch (Exception e) {
            System.err.println("测试网连接配置错误: " + e.getMessage());
        }
        
        System.out.println("\n=== 使用提示 ===");
        System.out.println("1. 替换 'your-private-key' 为你的实际私钥");
        System.out.println("2. 对于主网，还需要提供 TronGrid API 密钥");
        System.out.println("3. 本地节点需要确保 TRON 全节点正在运行");
        System.out.println("4. 测试网可以免费使用，适合开发和测试");
    }
}
